- name: install nginx and certbot
  apt:
    name: '{{ item }}'
    update_cache: True
  loop:
    - nginx
    - certbot

- name: Start nginx and certbot
  service:
    name: '{{ item }}'
    state: started
    enabled: yes
  loop:
    - nginx
    - certbot

- name: copy nginx config
  when: configs != False
  copy:
    src: '{{ configs }}'
    dest: /etc/nginx/
  notify: reload nginx

- name: Remove default site content and conf
  file:
    path: '{{ item }}'
    state: absent
  loop:
    - '/etc/nginx/sites-available/default'
    - '/etc/nginx/sites-enabled/default'
    - '/var/www/html'

- name: check cert
  stat:
    path: /etc/letsencrypt/live/{{ domain }}/fullchain.pem
  register: cert_exists

- name: Set fact of SSL certificates
  when: server in ssl
  set_fact:
    ssl_exist: "{{ cert_exists.stat.exists }}"

- name: Copy site config
  template:
    src: site_conf.j2
    dest: '/etc/nginx/sites-available/{{ domain }}'
    mode: 0644

- name: vhost activation
  when: server in vhosts
  file:
    src: '/etc/nginx/sites-available/{{ item }}'
    dest: '/etc/nginx/sites-enabled/{{ item }}'
    state: link
#  loop: '{{ vhosts }}'
  notify: reload nginx

- name: Flush handlers
  meta: flush_handlers

- name: certs renewal
  when: ssl_renewal == True
  shell: certbot renew --non-interactive

#{% for item in ssl %}

# on in war machine
# - name: renew cert
#   tags: molecule-notest
#   when: ssl_exist == False and ssl_renewal == True
#   shell: 'certbot certonly --webroot --register-unsafely-without-email --agree-tos --non-interactive --webroot-path /var/www/{{ domain }} --domains {{ domain }}'
#   notify: reload nginx

- name: Flush handlers
  meta: flush_handlers

#{% endfor %}

- name: check renewal
  stat:
    path: /etc/cron.d/certbot
  register: check_renewal
  changed_when: False
  

- name: auto renew SSL certificates by cron
  when: check_renewal.stat.exists == True
  copy:
    src: certbot
    dest: /etc/cron.d/certbot
